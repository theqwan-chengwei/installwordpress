---
# tasks file for installwordpress

    - name: ==> add host info
      lineinfile: dest=/etc/hosts line="10.0.0.10  {{ hostname }}" state=present
      when: modify_hostname

    - debug: msg="==> download and extract wordpress"

    - name: download wordpress tarball
      get_url:
        url: "https://tw.wordpress.org/wordpress-{{ wordpress_version }}-zh_TW.tar.gz"
        dest: /tmp/

    - name: extract wordpress tarball
      unarchive:
        src: "/tmp/wordpress-{{ wordpress_version }}-zh_TW.tar.gz"
        dest: "{{ wordpress_parent_path }}"
        owner: "{{ wordpress_owner }}"
        group: "{{ wordpress_group }}"
        copy: no

    - debug: msg="==> install site conf file for wordpress"

    - name: check if "default.conf.bak" target exists
      stat: path=/etc/nginx/conf.d/default.conf
      register: filecheck

    - name: rename to "default.conf.bak"
      command: mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak
      when: filecheck.stat.exists

    - name: copy wordpress site conf for nginx
      template:
        src: ./templates/nginx-wordpress.conf.j2
        dest: /etc/nginx/conf.d/nginx-wordpress.conf
      notify: restart nginx

    - name: ==> set wordpress config
      template:
        src: ./templates/wp-config.php.j2
        dest: "{{ wordpress_path }}/wp-config.php"
        owner: "{{ wordpress_owner }}"
        group: "{{ wordpress_group }}"
      notify: restart nginx

    - debug: msg="==>automate the '5-minute install' process"

    - name: install dependency - httplib2
      apt: name=python-httplib2 state=present
      #pip: name=httplib2

    - name: send POST to WordPress install wizard
      uri:
        url: "{{ wordpress_install_url }}"
        method: POST
        HEADER_Content-Type: "application/x-www-form-urlencoded"
        body: "weblog_title={{ blog_title }}&user_name={{ blog_user }}&admin_email={{ blog_email }}&blog_public=true&admin_password={{ blog_password }}&admin_password2={{ blog_password }}"
        status_code: 200